name: Java CI/CD with Maven

on:
   workflow_dispatch:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}


jobs:
  
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -DskipTests=true package --file pom.xml
    
    - name: Build Docker image
      run: docker build -t ahmedmahfouz/my_java_app:latest .

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push ahmedmahfouz/my_java_app:latest

  Deploy:
     name: Provision aws infrastructure using Terraform
     runs-on: ubuntu-latest
     outputs:
       eip: ${{ steps.EIP.outputs.ec2_address }}
     needs: [ Build ]
     steps: 
      
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
    
      
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan
      
      - name: Terraform Apply
        run: terraform apply --auto-approve
      
      - name: Get Instance IP
        id: EIP
        run: |
          terraform-bin output -raw instance_public_ip > ip_address.txt
          echo "ec2_address=$(cat ip_address.txt)" >> $GITHUB_OUTPUT


      - name: multiple command
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.EIP.outputs.ec2_address  }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY_PATH }}
          port: 22
          script: |
              sudo apt-get update
              sudo apt-get install ca-certificates curl
              sudo install -m 0755 -d /etc/apt/keyrings
              sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
              sudo chmod a+r /etc/apt/keyrings/docker.asc
              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              sudo systemctl start docker
              sudo systemctl enable docker
              docker pull ahmedmahfouz/my_java_app:latest
              docker run --name test_container -d -p 80:80 ahmedmahfouz/my_java_app:latest